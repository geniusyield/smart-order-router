repository cardano-haskell-packages
  url: https://input-output-hk.github.io/cardano-haskell-packages
  secure: True
  root-keys:
    3e0cce471cf09815f930210f7827266fd09045445d65923e6d0238a6cd15126f
    443abb7fb497a134c343faf52f0b659bd7999bc06b7f63fa76dc99d631f9bea1
    a86a1f6ce86c449c46666bda44268677abf29b5b2d2eb5ec7af903ec2f117a82
    bcec67e8e99cabfa7764d75ad9b158d72bfacf70ca1d0ec8bc6b4406d1bf8413
    c00aae8461a256275598500ea0e187588c35a5d5d7454fb57eac18d9edb86a56
    d4a35cd3121aa00d18544bb0ac01c3e1691d618f462c46129271bccf39f7e8ee

-- repeating the index-state for hackage to work around hackage.nix parsing limitation
index-state: 2023-06-06T00:00:00Z

index-state:
  , hackage.haskell.org 2023-06-06T00:00:00Z
  , cardano-haskell-packages 2023-06-05T06:39:32Z

packages: .
packages: geniusyield-orderbot-framework

-- TODO: Default value should be @direct@ in upcoming 3.10 version of cabal, omit this line then.
test-show-details: direct

package cardano-crypto-praos
  flags: -external-libsodium-vrf

-- TODO: This is fixed for in their later version, omit this when we update to it.
package strict-containers
  ghc-options: -Wwarn=noncanonical-monad-instances

source-repository-package
  type: git
  location: https://github.com/maestro-org/haskell-sdk
  tag: d70479ce3be06d6b7c52bf39d783f36d6771e36d
  --sha256: sha256-8se+xlIB1BDEuKGwjaldmW5G4LpCujD1ABgBaY0cY6Y=

-- Unfortunately, cardano-node 8.1.2 is constrained with plutus-ledger-api 1.5.0.0 and we would like at least 1.6.0.0.
-- This is done in accordance with changes in https://github.com/input-output-hk/cardano-ledger/pull/3430/files.
constraints:
    plutus-ledger-api == 1.6.0.0
  , plutus-core == 1.6.0.0

allow-newer:
  , cardano-ledger-alonzo:plutus-ledger-api
  , cardano-ledger-alonzo:plutus-core
  , cardano-ledger-alonzo-test:plutus-ledger-api
  , cardano-ledger-alonzo-test:plutus-ledger-api-testlib
  , cardano-ledger-babbage:plutus-ledger-api
  , cardano-ledger-conway:plutus-ledger-api
  , cardano-ledger-binary:plutus-ledger-api
  , cardano-api:plutus-ledger-api
  , cardano-api:plutus-ledger-api-testlib
  , cardano-api:prettyprinter-configurable

source-repository-package
  type: git
  location: https://github.com/geniusyield/ply
  tag: c301d9514982abce1b4497237ba8231cf3ca058d
  --sha256: sha256-f3hhzeOpva64FfF4HZc3uoPcWbhEJN20b0RrEKfXBxc=
  subdir: ply-core

source-repository-package
  type: git
  location: https://github.com/geniusyield/atlas
  tag: 1c20f2a65de8e087b495d1f3ad524d6e659167ad
  --sha256: sha256-mvzqgLwKHhIJdeHfUoIdapN0t2K85DoehgSkfm/ddIw=

source-repository-package
  type: git
  location: https://github.com/geniusyield/dex-contracts-api
  tag: e842963a1a13ae6e6a5c53de1e1039f2acbc13ae
  --sha256: sha256-XFENwL+vD1v2LvDoQ4/RfM/ksEB1+rvvCmjW7kSYavY=
  subdir:
    geniusyield-dex-api
    geniusyield-onchain/geniusyield-common

source-repository-package
  type: git
  location: https://github.com/geniusyield/plutus-simple-model
  tag: 0cb63af903a835c73aec662092eb67d228bba9b0
  --sha256: sha256-H56EyRFNdDvLDo9FVeGZyQZ92itQPG39TkMVyEC/xqM=
  subdir:
    cardano-simple
    psm

-- This should be present for in hackage index state >= 18th of september, 23. Remove it when we update to it.
source-repository-package
  type: git
  location: https://github.com/blockfrost/blockfrost-haskell
  tag: 206e1a0f62e2a7cc08d05db8d62cef8dc2fbd98e
  --sha256: sha256-R6BP3hwrOBmlRabA3prUuOGkYzETmQIM+K+Oh+fczEY=
  subdir:
    blockfrost-api
    blockfrost-client-core
    blockfrost-client

-- Everything below is essentially copied from cardano-wallet's cabal.project.
-------- Begin contents from @cardano-wallet@'s @cabal.project@ file. --------

source-repository-package
  type: git
  location: https://github.com/input-output-hk/cardano-wallet
  tag: v2023-07-18
  --sha256: sha256-ijflgIw+1FpLoxM4Rksf4MJvNqnEPAv3gNWE8zMuefU=
  subdir:
    lib/balance-tx/
    lib/coin-selection/
    lib/delta-store/
    lib/delta-table
    lib/delta-types/
    lib/launcher/
    lib/numeric/
    lib/primitive/
    lib/test-utils/
    lib/text-class/
    lib/wai-middleware-logging/
    lib/wallet/
    lib/wallet-benchmarks/

-- Using RDRAND instead of /dev/urandom as an entropy source for key
-- generation is dubious. Set the flag so we use /dev/urandom by default.
package cryptonite
  flags: -support_rdrand

-- Using a fork until our patches can be merged upstream

-- TODO: ADP-1713
source-repository-package
  type: git
  location: https://github.com/biocad/servant-openapi3
  tag: 4165b837d3a71debd1059c3735460075840000b5
  --sha256: 1dngrr353kjhmwhn0b289jzqz5rf32llwcv79zcyq15ldpqpbib9

-- TODO: ADP-1713
source-repository-package
  type: git
  location: https://github.com/paolino/openapi3
  tag: f22c31611c295637a3e72b341cd1c56d1d87b993
  --sha256: 10l7wlaz9rcr3fysi1vwg7qqa826bb7nidkpx9jy1q7ja7ddw47i

source-repository-package
    type: git
    location: https://github.com/input-output-hk/cardano-addresses
    tag: 6b55f96d57a181f898eb2a50531d3ae4280c549c
    --sha256: 0yygam995i3mawk6hfgxb6v918phvqzyipzhjflff0l6zfrldy7f
    subdir: command-line
            core

package cardano-addresses
  ghc-options: -Wno-incomplete-uni-patterns

source-repository-package
    type: git
    location: https://github.com/input-output-hk/cardano-sl-x509
    tag: a91add165152fa36f08e95fafe7da24f1dba4690
    --sha256: 1ia8vlqghis92cla8qmqa6kh8f3jn29b01fshyk5hmgy5373s684

source-repository-package
    type: git
    location: https://github.com/input-output-hk/bech32.git
    tag: e341e7f83d7b73f10baa87e946818b2c493cc5f5
    --sha256: 1d891bpc1q1m1gqj02b4iv3kr4g9w7knlkq43hwbl9dn5k78aydc
    subdir: bech32

-- -------------------------------------------------------------------------
-- Constraints tweaking

-- cardano-addresses unit tests bring in some version constraint conflicts.
--
-- 1. hjsonschema and hjsonpointer deps have overly strict bounds.
-- 2. it has strict aeson < 1.5 dep - this will be fixed in the next release.
allow-newer:
    hjsonschema:*
  , hjsonpointer:*
  , *:aeson
  , *:hashable
  , async-timer:unliftio-core
  , ekg:*
  , ntp-client:*
  , libsystemd-journal:base
  , size-based:template-haskell

constraints:
    bimap >= 0.4.0
  , openapi3 >= 3.2.0
  , libsystemd-journal >= 1.4.4
  , systemd >= 2.3.0
  -- dependency of systemd-2.3.0
  , network >= 3.1.1.1
  -- choose versions that work with base >= 4.12
  , hjsonpointer >= 1.5.0
  , hjsonschema >= 1.10.0
  , Cabal >= 3.4.0.0
  , async-timer >= 0.2.0.0
  , unliftio-core >= 0.2.0.1
  , generic-arbitrary >= 0.2.2
  , iohk-monitoring >= 0.1.11

  -- lower versions of katip won't build with the Win32-2.12.0.1
  -- which is shipped with the ghc-9.2.8
  , katip >= 0.8.7.4

  -- Cardano Node dependencies:
  , cardano-api ^>=8.2
  , cardano-slotting >= 0.1
  , ouroboros-network ^>= 0.8.1.0

  -- TH Name shadowing warnings need to be addressed when bumping to 2.13.3.5
  , persistent == 2.13.3.3

  -- Haddock is broken in this release. Waiting for the next release

-- ----------------------------------------------------------------
-- Flags for dependencies

package cardano-config
  flags: -systemd
package cardano-node
  flags: -systemd

-- -------------------------------------------------------------------------
-------- End contents from @cardano-wallet@'s @cabal.project@ file. --------

constraints:
  -- We need turtle > 1.6 to support GHC 9.6. But that version now allows
  -- some broken situations: https://github.com/Gabriella439/turtle/pull/446#issuecomment-1637628373
  -- We are forced into an old version of ansi-wl-pprint because of inline-c (dep of inline-r), which
  -- doesn't support the new one.
  -- So for now we just force old versions of optparse-applicative and ansi-wl-pprint.
  -- This is fine for CHaP, since we don't publish plutus-metatheory and the flag for inline-r
  -- is off by default.
  optparse-applicative < 0.18
  , ansi-wl-pprint < 1.0
